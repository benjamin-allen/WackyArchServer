<div class="cpuinfo-mainbox">
    <table>
        <tr><th></th><th>Dec</th><th>Hex</th></tr>
        @foreach(var register in Cpu.Registers)
        {
            <tr><td>@register.Name</td><td>@register.Data.Value</td><td>@((register.Data.Value & 0xFFF).ToString("x"))</td></tr>
        }
    </table>
    <div class="cpustatus">
        CPU: @CpuStatus
    </div>
</div>
<div class="controls">
    <button @onclick="args => RunEvent(LoadButtonPressed)" disabled=@loadButtonDisabled>Load Program</button><br/>
    <button @onclick="args => RunEvent(StepButtonPressed)" disabled=@stepButtonDisabled>Step</button><br/>
    <button @onclick="args => RunEvent(RunButtonPressed)" disabled=@runButtonDisabled>Run</button><br/>
    <button @onclick="args => RunEvent(ResetButtonPressed)" disabled=@resetButtonDisabled>Reset</button><br/>
    <button @onclick="SubmitButtonPressed">Submit Solution</button><br/>
    <button @onclick="BackButtonPressed">Exit Challenge</button><br/>
</div>

@code {
    [Parameter, EditorRequired]
    public CPU Cpu { get; set; }

    [Parameter]
    public EventCallback LoadButtonPressed { get; set; }
    [Parameter]
    public EventCallback StepButtonPressed { get; set; }
    [Parameter]
    public EventCallback RunButtonPressed { get; set; }
    [Parameter]
    public EventCallback ResetButtonPressed { get; set; }
    [Parameter]
    public EventCallback SubmitButtonPressed { get; set; }
    [Parameter]
    public EventCallback BackButtonPressed { get; set; }

    public string CpuStatus { get; set; }

    private bool loadButtonDisabled = false;
    private bool stepButtonDisabled = false;
    private bool runButtonDisabled = false;
    private bool resetButtonDisabled = false;

    private async void RunEvent(EventCallback callback)
    {
        await callback.InvokeAsync();
        UpdateStateBasedOnCpuStatus();
    }

    // This is a terrible tiny "state machine" that's not a state machine. I'm sorry, I'm just lazy.
    void UpdateStateBasedOnCpuStatus()
    {
        if (Cpu.PcLineMap.Count == 0)
        {
            CpuStatus = "NO PROGRAM";
            loadButtonDisabled = false;
            stepButtonDisabled = true;
            runButtonDisabled = true;
            resetButtonDisabled = true;
        }
        else if (Cpu.IsHalted && !Cpu.IsErrored)
        {
            CpuStatus = "READY";
            loadButtonDisabled = false;
            stepButtonDisabled = false;
            runButtonDisabled = false;
            resetButtonDisabled = false;
        }
        else if (Cpu.IsErrored)
        {
            CpuStatus = "ERROR";
            loadButtonDisabled = false;
            stepButtonDisabled = true;
            runButtonDisabled = true;
            resetButtonDisabled = false;
        }
        else
        {
            CpuStatus = "RUNNING";
            loadButtonDisabled = true;
            stepButtonDisabled = false;
            runButtonDisabled = false;
            resetButtonDisabled = false;
        }
    }
}
