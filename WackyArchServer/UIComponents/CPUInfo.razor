<div id="cpuinfo-container">
    <div id="cpuinfo-mainbox">
        <table>
            <tr><th></th><th>Decimal</th><th>Hex</th></tr>
            @foreach(var register in Cpu.Registers)
            {
                <tr><td>@register.Name</td><td>@register.Data.Value</td><td>@((register.Data.Value & 0xFFF).ToString("x"))</td></tr>
            }
        </table>
        <div id="cpuinfo-status">
            CPU: @CpuStatus
        </div>
    </div>
    <div id="cpuinfo-controls">
        <button id="top-button" @onclick="args => RunEvent(LoadButtonPressed)" disabled=@loadButtonDisabled>
            <span class="oi oi-data-transfer-download"></span>
            Load Program
        </button>
        <button @onclick="args => RunEvent(StepButtonPressed)" disabled=@stepButtonDisabled>
            <span class="oi oi-arrow-thick-right"></span>
            Step
        </button>
        <button @onclick="args => RunEvent(RunButtonPressed)" disabled=@runButtonDisabled>
            <span class="oi oi-media-play"></span>
            Run
        </button>
        <button @onclick="args => RunEvent(ResetButtonPressed)" disabled=@resetButtonDisabled>
            <span class="oi oi-reload"></span>
            Reset
        </button>
        <button id="bottom-button" @onclick="SubmitButtonPressed" disabled=@submitButtonDisabled>
            <span class="oi oi-flag"></span>
            Submit
        </button>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public CPU Cpu { get; set; }

    [Parameter]
    public EventCallback LoadButtonPressed { get; set; }
    [Parameter]
    public EventCallback StepButtonPressed { get; set; }
    [Parameter]
    public EventCallback RunButtonPressed { get; set; }
    [Parameter]
    public EventCallback ResetButtonPressed { get; set; }
    [Parameter]
    public EventCallback SubmitButtonPressed { get; set; }

    public string CpuStatus { get; set; }

    private bool loadButtonDisabled = false;
    private bool stepButtonDisabled = false;
    private bool runButtonDisabled = false;
    private bool resetButtonDisabled = false;
    private bool submitButtonDisabled = true;

    private async void RunEvent(EventCallback callback)
    {
        await callback.InvokeAsync();
        UpdateStateBasedOnCpuStatus();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        UpdateStateBasedOnCpuStatus();
    }

    // This is a terrible tiny "state machine" that's not a state machine. I'm sorry, I'm just lazy.
    void UpdateStateBasedOnCpuStatus()
    {
        if (Cpu.PcLineMap.Count == 0)
        {
            CpuStatus = "NO PROGRAM";
            loadButtonDisabled = false;
            stepButtonDisabled = true;
            runButtonDisabled = true;
            resetButtonDisabled = false;
        }
        else if (Cpu.IsHalted && !Cpu.IsErrored)
        {
            CpuStatus = "READY";
            loadButtonDisabled = true;
            stepButtonDisabled = false;
            runButtonDisabled = false;
            resetButtonDisabled = false;
        }
        else if (Cpu.IsErrored)
        {
            CpuStatus = "ERROR";
            loadButtonDisabled = false;
            stepButtonDisabled = true;
            runButtonDisabled = true;
            resetButtonDisabled = false;
        }
        else
        {
            CpuStatus = "RUNNING";
            loadButtonDisabled = true;
            stepButtonDisabled = false;
            runButtonDisabled = false;
            resetButtonDisabled = false;
        }
    }

    public void DisableSubmitButton(bool disabled)
    {
        submitButtonDisabled = disabled;
    }
}
