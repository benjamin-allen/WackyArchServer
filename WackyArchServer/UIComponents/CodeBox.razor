@inject IJSRuntime JS

<div id="ace-editor"></div>
<div class="codebox-info" >
    <p>@infoMessage</p>
</div>


@code {
    [Parameter, EditorRequired]
    public CPU Cpu { get; set; }

    private string infoMessage { get; set; }


    #region Ace Interop
    private IJSObjectReference module { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./UIComponents/CodeBox.razor.js");
            await module.InvokeVoidAsync("setup");
        }
    }

    public async Task<string> GetText()
    {
        return await module.InvokeAsync<string>("getText");
    }

    /// <summary>
    /// Highlights the input line, and highlights it red if isError is set.
    /// line = 0 will clear all highlights.
    /// </summary>
    public async Task SetLinePointer(int line, bool isError)
    {
        await module.InvokeVoidAsync("setLinePointer", line, isError);
    }
    #endregion


    public void SetInfoMessage(string infoMessage)
    {
        this.infoMessage = infoMessage;
    }
}
